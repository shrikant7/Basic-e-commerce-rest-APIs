# cloud gcloud mysql properties
spring.cloud.gcp.sql.instance-connection-name=xxxx:xxxx:xxxx
spring.cloud.gcp.sql.database-name=xxxx
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=xxxx
spring.datasource.password=xxxx

# keep the connection alive if idle for a long time(needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# show log or not for each sql query
spring.jpa.show-sql=false

# hibernate ddl auto(create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update

# naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# sql dialect makes hibernate generate better SQL for chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

mail.admin=xxxxxx@gmail.com
file.upload-dir=./uploads
server.port=${PORT:8080}

# Mail sender properties used in local environment before GCP move
spring.mail.host = smtp.gmail.com
spring.mail.username = xxxxxx@gmail.com
spring.mail.password = xxxxxx
spring.mail.port = 587
spring.mail.properties.mail.smtp.starttls.enable = true

# google cloud properties
gcs-resource-bucket=xxxx.appspot.com
gcs-resource-path=gs://xxxx.appspot.com

# my properties
host-address=http://xxxx.el.r.appspot.com/
mail-sendgrid-password=xxxx